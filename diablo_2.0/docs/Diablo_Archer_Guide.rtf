{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red128\green128\blue128;\red116\green47\blue2;\red101\green237\blue251;
\red119\green0\blue2;\red130\green0\blue134;}
\margl1440\margr1440\vieww11320\viewh12720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Diablo on Archer\
\
login with ssh -X user@login.archer.ac.uk\
\
run directory\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs22 \cf0 \cb2 \CocoaLigature0 /work/e376/e376/shared/runs/Re25000/Ri0.13
\f0\fs24 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
Files on Oceanus:\
/data/oceanus/ed441/sim/MUST/archer/Re25000/Ri0.13\
\
Add the following lines to your .bashrc file\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs22 \cf3 \cb2 \CocoaLigature0 export\cf4  PYTHONPATH=\cf3 "\cf5 /work/e376/e376/shared/lib/python/:\cf3 "\cf6 $PYTHONPATH\cf0 \
\cf3 export\cf4  PYTHONPATH=\cf3 "\cf5 /work/e376/e376/shared/lib/python/packages/lib/python2.7/sit\\\cf0 \
\cf5 e-packages:\cf3 "\cf6 $PYTHONPATH\cf0 \
\cf3 export\cf4  MODULEPATH=\cf6 $MODULEPATH\cf0 :\cf3 "\cf0 /work/e376/e376/shared/modules/\cf3 "
\f0\fs24 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
module add python matplotlib numpy diablo\
\
To get an update on the progress of the simulation:\
Load the python module files\
	module add python matplotlib numpy diablo\
From the simulation directory, run\
	python run.py\
\
To run a simulation:\
Switch to the environment for the intel compiler:\
	module swap PrgEnv-cray PrgEnv-intel\
Load the hdf5, fftw, and diablo_2d modules:\
	module add hdf5/1.8.12-intel fftw/2.1.5.7 diablo_2d\
\
From the code run directory compile the code using:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs22 \cf0 \cb2 \CocoaLigature0 compDia.sh -Options="HDF5=TRUE PARALLEL=TRUE ARCH=ifort" -Clean=yes\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \cb1 \CocoaLigature1 \
To run the code\
Edit wrap.sh to give the correct number of nodes and processors -n cores -p proc/node\
./wrap.sh # >wrap.out\
where # is the number of the previous run directory (or an older one) NOTE, exclude leading zeros from the directoy name, e.g. type ./wrap 60 > wrap.out to start from the files in directory 0060\
\
To stop the code:\
In the run directory:\
	touch stop.wrap (Prevents the wrap script from recursively calling itself)\
	touch stop.now (Optionally stop the code that is already running)\
\
\
To automatically copy output files to oceanus:\
(For this, you will need to set up passwordless logins with oceanus and archer using an ssh key)\
Edit to_oceanus.sh to have your username and set the correct directory\
This script compresses files, sends them over, uncompresses the results, compares the files and if they are the same, it deletes them from Archer\
To run:\
./to_oceanus.sh #### #### > to_oceanus.out\
where #### is the name(s) of the directory to be copied\
\
\
\
\
}